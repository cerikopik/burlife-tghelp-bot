import os
import re
import asyncio
from telegram import Bot, ReactionTypeEmoji
from telegram.helpers import escape_markdown
from telegram.ext import Application, MessageHandler, CommandHandler, filters

# --- –°–ï–ö–†–ï–¢–ù–´–ï –î–ê–ù–ù–´–ï –ë–ï–†–£–¢–°–Ø –ò–ó –û–ö–†–£–ñ–ï–ù–ò–Ø ---
BOT_TOKEN = os.getenv('BOT_TOKEN')
GROUP_CHAT_ID = os.getenv('GROUP_CHAT_ID')

if not BOT_TOKEN or not GROUP_CHAT_ID:
    raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –∏–ª–∏ GROUP_CHAT_ID!")

GROUP_CHAT_ID = int(GROUP_CHAT_ID)
# --- –ö–û–ù–ï–¶ –ë–õ–û–ö–ê –° –î–ê–ù–ù–´–Ø–ú–ò ---


async def start(update, context):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start."""
    user_name = update.message.from_user.first_name
    welcome_text = (
        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_name}!\n\n"
        "–Ø –±–æ—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π —Å–∞–π—Ç–∞. "
        "–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –∑–¥–µ—Å—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤.\n\n"
        "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∏ —è –µ–≥–æ –ø–µ—Ä–µ–¥–∞–º. –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å —Ñ–æ—Ç–æ."
    )
    await update.message.reply_text(welcome_text)


async def forwarder(update, context):
    """–ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º."""
    user = update.message.from_user
    first_name = escape_markdown(user.first_name, version=2)
    last_name = escape_markdown(user.last_name or '', version=2)
    user_id = user.id
    username = escape_markdown(user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω', version=2)
    user_info = (
        f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n"
        f"üë§ –ò–º—è: {first_name} {last_name}\n"
        f"üÜî ID: `{user_id}`\n"
        f"üîó –Æ–∑–µ—Ä–Ω–µ–π–º: @{username}"
    )
    await context.bot.send_message(
        chat_id=GROUP_CHAT_ID,
        text=user_info,
        parse_mode='MarkdownV2'
    )
    await context.bot.forward_message(
        chat_id=GROUP_CHAT_ID,
        from_chat_id=update.message.chat_id,
        message_id=update.message.message_id
    )
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ. –ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è.")


# ‚Üì‚Üì‚Üì –ò–ó–ú–ï–ù–ï–ù–ò–Ø –ó–î–ï–°–¨ ‚Üì‚Üì‚Üì
async def reply_to_user(update, context):
    """–ò–∑–≤–ª–µ–∫–∞–µ—Ç ID –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç."""
    if not update.message.reply_to_message:
        return

    replied_to_msg = update.message.reply_to_message

    if replied_to_msg.from_user.is_bot and replied_to_msg.text:
        match = re.search(r"üÜî ID: (\d+)", replied_to_msg.text)
        
        if match:
            user_id = int(match.group(1))

            # ‚≠ê 1. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Å—ã–ª–∫–æ–π
            preset_text = "–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ë–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ [–Ω–∞—à–µ–º —Å–∞–π—Ç–µ](https://www.example.com/)."
            await context.bot.send_message(
                chat_id=user_id,
                text=preset_text,
                parse_mode='Markdown' # –ò—Å–ø–æ–ª—å–∑—É–µ–º Markdown –¥–ª—è —Å—Å—ã–ª–∫–∏
            )

            # ‚≠ê 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –æ—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∞ (–∫–∞–∫ –∏ —Ä–∞–Ω—å—à–µ)
            await context.bot.copy_message(
                chat_id=user_id,
                from_chat_id=update.message.chat_id,
                message_id=update.message.message_id
            )
            
            # –°—Ç–∞–≤–∏–º —Ä–µ–∞–∫—Ü–∏—é –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
            await update.message.set_reaction(reaction=ReactionTypeEmoji("‚úÖ"))
            return

    await update.message.reply_text(
        "‚ÑπÔ∏è **–ü–æ–¥—Å–∫–∞–∑–∫–∞:** –ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
    )


def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏."""
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.REPLY & filters.Chat(chat_id=GROUP_CHAT_ID), reply_to_user))
    application.add_handler(MessageHandler(filters.ALL & ~filters.COMMAND & ~filters.Chat(chat_id=GROUP_CHAT_ID), forwarder))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    application.run_polling()


if __name__ == '__main__':
    main()
