import os
import re
import asyncio
from telegram import Bot, ReactionTypeEmoji, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.helpers import escape_markdown
from telegram.ext import Application, MessageHandler, CommandHandler, filters, CallbackQueryHandler

# --- –°–ï–ö–†–ï–¢–ù–´–ï –î–ê–ù–ù–´–ï –ë–ï–†–£–¢–°–Ø –ò–ó –û–ö–†–£–ñ–ï–ù–ò–Ø ---
BOT_TOKEN = os.getenv('BOT_TOKEN')
GROUP_CHAT_ID = os.getenv('GROUP_CHAT_ID')

if not BOT_TOKEN or not GROUP_CHAT_ID:
    raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –∏–ª–∏ GROUP_CHAT_ID!")

GROUP_CHAT_ID = int(GROUP_CHAT_ID)
# --- –ö–û–ù–ï–¶ –ë–õ–û–ö–ê –° –î–ê–ù–ù–´–ú–ò ---


async def start(update, context):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start."""
    user_name = update.message.from_user.first_name
    welcome_text = (
        f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user_name}!\n\n"
        "–Ø –±–æ—Ç –¥–ª—è —Å–≤—è–∑–∏ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–∞ ü§ñ "
        "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ 4—Ö –∑–Ω–∞—á–Ω—ã–π –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–∞ —Å–∞–π—Ç–µ.\n\n"
        "–û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π. –ó–∞—è–≤–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤—Ä—É—á–Ω—É—é, —ç—Ç–æ –∑–∞–π–º—ë—Ç –∫–∞–∫–æ–µ-—Ç–æ –≤—Ä–µ–º—è ‚åõ"
    )
    await update.message.reply_text(welcome_text)


async def forwarder(update, context):
    """–ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º —Å –∫–Ω–æ–ø–∫–æ–π."""
    user = update.message.from_user
    first_name = escape_markdown(user.first_name, version=2)
    last_name = escape_markdown(user.last_name or '', version=2)
    user_id = user.id
    username = escape_markdown(user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω', version=2)
    
    user_info = (
        f"üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n"
        f"üë§ –ò–º—è: {first_name} {last_name}\n"
        f"üÜî ID: `{user_id}`\n"
        f"üîó –Æ–∑–µ—Ä–Ω–µ–π–º: @{username}"
    )

    keyboard = [
        [InlineKeyboardButton("–û—Ç–≤–µ—Ç–∏—Ç—å —à–∞–±–ª–æ–Ω–æ–º", callback_data=f"reply_to_{user_id}")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await context.bot.send_message(
        chat_id=GROUP_CHAT_ID,
        text=user_info,
        parse_mode='MarkdownV2',
        reply_markup=reply_markup
    )
    
    await context.bot.forward_message(
        chat_id=GROUP_CHAT_ID,
        from_chat_id=update.message.chat_id,
        message_id=update.message.message_id
    )
    
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ ‚úÖ –ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è.")


async def button_handler(update, context):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏."""
    query = update.callback_query
    await query.answer()

    data = query.data
    if data.startswith("reply_to_"):
        user_id = int(data.split("_")[2])

        preset_message = "üìß–í–∞—à–∞ [–ü–†–ò–ì–õ–ê–°–ò–¢–ï–õ–¨–ù–ê–Ø –°–°–´–õ–ö–ê](https://t.me/+k2dfZY9KPAowNjM6) –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª. –ü–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞–∂–º–∏—Ç–µ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É, –∏ –æ–Ω–∞ –±—É–¥–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ üëå"

        try:
            await context.bot.send_message(chat_id=user_id, text=preset_message)
            
            # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É (–∫–Ω–æ–ø–∫—É)
            await query.edit_message_reply_markup(reply_markup=None)
            
            # ‚≠ê –ó–∞–º–µ–Ω—è–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é
            await query.message.set_reaction(reaction=ReactionTypeEmoji("üëç"))

        except Exception as e:
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ —Ç–∞–∫–∂–µ —É–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É
            await query.edit_message_reply_markup(reply_markup=None)
            # –ò –º–æ–∂–µ–º –≤—ã–≤–µ—Å—Ç–∏ –æ—à–∏–±–∫—É –≤ –ª–æ–≥ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –¥–ª—è —Å–µ–±—è
            print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}. –û—à–∏–±–∫–∞: {e}")


def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏."""
    application = Application.builder().token(BOT_TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_handler))
    application.add_handler(MessageHandler(filters.ALL & ~filters.COMMAND & ~filters.Chat(chat_id=GROUP_CHAT_ID), forwarder))
    
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω (—Å —Ä–µ–∞–∫—Ü–∏—è–º–∏)...")
    application.run_polling()


if __name__ == '__main__':
    main()
